{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../../App.svelte",
    "../../alarm.svelte",
    "../../calibrate.svelte",
    "../../edit.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { scale } from \"svelte/transition\";\n  import Alarm from \"./alarm.svelte\";\n  import Edit from \"./edit.svelte\";\n  import Calibrate from \"./calibrate.svelte\";\n  let loc;\n  // loc = \"edit\";\n\n  let time = [\"04\", \"20\", \"PM\"];\n\n  function saveTime(event) {\n    loc = \"\";\n    time = event.detail;\n  }\n</script>\n\n<style>\n  main {\n    height: 100vh;\n\n    background: url(\"../img/background.jpg\");\n    background-position: center 20%;\n    background-size: 100% auto;\n    background-repeat: no-repeat;\n  }\n\n  .content {\n    max-width: 800px;\n    min-height: 100vh;\n    display: flex;\n    flex-flow: column nowrap;\n    justify-content: center;\n    align-items: center;\n    margin: 0 auto;\n  }\n</style>\n\n<main>\n  {#if loc == 'edit'}\n    <div\n      class=\"content\"\n      in:scale={{ delay: 200, start: 0.95, duration: 200 }}\n      out:scale={{ start: 0.95, duration: 200 }}>\n      <Edit {time} on:cancel={() => (loc = '')} on:save={saveTime} />\n    </div>\n  {:else if loc == 'calibrate'}\n    <div\n      class=\"content\"\n      in:scale={{ delay: 200, start: 0.95, duration: 200 }}\n      out:scale={{ start: 0.95, duration: 200 }}>\n      <Calibrate on:cancel={() => (loc = '')} on:save={() => (loc = '')} />\n    </div>\n  {:else}\n    <div\n      class=\"content\"\n      in:scale={{ delay: 200, start: 0.95, duration: 200 }}\n      out:scale={{ start: 0.95, duration: 200 }}>\n      <Alarm\n        {time}\n        on:edit={() => (loc = 'edit')}\n        on:calibrate={() => (loc = 'calibrate')} />\n    </div>\n  {/if}\n</main>\n",
    "<script>\n  import { createEventDispatcher } from \"svelte\";\n  const dispatch = createEventDispatcher();\n\n  export let time;\n\n  // let now = new Date();\n  // now.setDate(now.getDate() + 1);\n  // now.setHours(time[2] == \"AM\" ? time[0] : -12 - time[0]);\n  // now.setMinutes(time[1]);\n\n  // console.log(now);\n</script>\n\n<style>\n  .time {\n    position: relative;\n    font-size: 70px;\n    font-weight: bold;\n    color: #fff;\n  }\n\n  .time::after {\n    position: absolute;\n    content: \"6 hours from now\";\n    right: 0;\n    bottom: 0;\n    transform: translateY(100%);\n    font-size: 13px;\n  }\n\n  .buttons {\n    position: fixed;\n    bottom: 0;\n    max-width: 400px;\n    width: calc(100% - 80px);\n    margin: 0 auto 20px;\n    display: flex;\n    flex-flow: row nowrap;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  button {\n    width: 45%;\n    max-width: 160px;\n  }\n</style>\n\n<div class=\"time\">{time[0]}:{time[1]}{time[2]}</div>\n<div class=\"buttons\">\n  <button on:click={() => dispatch('edit')}>edit</button>\n  <button on:click={() => dispatch('calibrate')}>calibrate</button>\n</div>\n",
    "<script>\n  import { createEventDispatcher } from \"svelte\";\n  const dispatch = createEventDispatcher();\n\n  let baseWeight = 0;\n  let activeWeight = 0;\n  let currentWeight = 0;\n\n  let relativeWeight = 0;\n  $: relativeWeight = currentWeight - baseWeight;\n\n  function setOnLevel() {\n    // activeWeight = await getWeight();\n    activeWeight = currentWeight;\n  }\n\n  function setOffLevel() {\n    // baseWeight = await getWeight();\n    baseWeight = currentWeight;\n  }\n\n  async function getWeight() {\n    try {\n      let response = await fetch(\n        \"https://api.particle.io/v1/devices/\" +\n          \"46005e001051353338363333\" +\n          \"/pressure/?access_token=\" +\n          \"83444f78d373e3bdaba4fd8873e48b8483df5235\"\n      );\n      let data = await response.json();\n      return data.result - 5;\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  setInterval(_ => getWeight().then(w => (currentWeight = w)), 1000);\n</script>\n\n<style>\n  #calibrate {\n    display: flex;\n    flex-flow: column nowrap;\n    justify-content: center;\n    align-items: center;\n    min-height: 50vh;\n    max-height: 300px;\n    width: calc(100% - 80px);\n    margin: 0 auto;\n  }\n\n  button {\n    padding: 10px 40px;\n    font-size: 21px;\n    border-radius: 40px;\n  }\n\n  .reset {\n    margin-bottom: 20px;\n  }\n\n  p {\n    margin: 0;\n  }\n\n  .amount {\n    font-size: 37px;\n  }\n\n  .actions {\n    display: flex;\n    flex-flow: column nowrap;\n    justify-content: flex-start;\n    align-items: center;\n    margin-top: 20px;\n  }\n\n  .save {\n    font-size: 21px;\n    padding: 10px 70px;\n  }\n\n  .cancel {\n    font-size: 16px;\n    background: #fff9;\n    padding: 5px 20px;\n    margin-top: 20px;\n  }\n</style>\n\n<div id=\"calibrate\">\n  <p class=\"amount\">{currentWeight}</p>\n  <p>You're {relativeWeight < 0 ? 'off' : 'on'} the bed</p>\n\n  <span>{relativeWeight}</span>\n  <button class=\"reset\" on:click={setOnLevel}>Set on the bed</button>\n\n  <span>{baseWeight}</span>\n  <button class=\"reset\" on:click={setOffLevel}>Set off the bed</button>\n</div>\n<div class=\"actions\">\n  <button class=\"save\" on:click={() => dispatch('save')}>save</button>\n  <button class=\"cancel\" on:click={() => dispatch('cancel')}>cancel</button>\n</div>\n",
    "<script>\n  import { createEventDispatcher } from \"svelte\";\n  const dispatch = createEventDispatcher();\n\n  export let time;\n\n  let newTime = [...time];\n\n  let dragging = false;\n  let gap = 10;\n  let timeout, col;\n\n  $: {\n    console.log(newTime);\n  }\n\n  function setStart(col) {\n    let index;\n    for (let i in col.children) {\n      const el = col.children[i];\n      if (el.innerText == newTime[col.dataset.index]) {\n        index = i;\n        break;\n      }\n    }\n\n    const itemHeight = Math.floor(col.clientHeight / col.children.length);\n    const y = -Math.abs(\n      newY(0, (index - 1) * itemHeight, col.dataset.colHeight)[0]\n    );\n\n    col.dataset.offsetY = y;\n    col.style.transform = `matrix(1, 0, 0, 1, 0, ${y})`;\n  }\n\n  function dragStart(event) {\n    first = true;\n    dragging = true;\n\n    if (!this.dataset.offsetY) {\n      this.dataset.offsetY = 0;\n    }\n\n    if (event.type == \"touchstart\") {\n      this.dataset.startY = event.changedTouches[0].screenY;\n      this.dataset.colHeight = (\n        event.target.closest(\".col\") || event.target\n      ).clientHeight;\n    } else {\n      this.dataset.startY = event.clientY;\n      this.dataset.colHeight = event.target.clientHeight;\n    }\n\n    this.style.transition = \"none\";\n    col = this;\n  }\n\n  function dragEnd(event) {\n    clearTimeout(timeout);\n    dragging = false;\n    this.startY = 0;\n\n    const itemHeight = Math.floor(\n      this.dataset.colHeight / this.children.length\n    );\n\n    let i = Math.round(this.dataset.offsetY / itemHeight);\n    if (10 < Math.abs(this.dataset.velocity)) {\n      this.dataset.velocity < 0 ? i++ : i--;\n    }\n\n    const y = -Math.abs(newY(0, i * itemHeight, this.dataset.colHeight)[0]);\n\n    this.dataset.offsetY = y;\n    this.style.transition = `transform 400ms ease-out`;\n    this.style.transform = `matrix(1, 0, 0, 1, 0, ${y})`;\n\n    newTime[this.dataset.index] = this.children[Math.abs(i) + 1].innerText;\n  }\n\n  let first = false;\n  function mousemove(event) {\n    if (!dragging) return;\n\n    if (first) {\n      col.dataset.startY -= col.dataset.offsetY;\n      first = false;\n    }\n\n    const oldY = col.dataset.offsetY;\n\n    [col.dataset.offsetY, col.dataset.startY] = newY(\n      col.dataset.startY,\n      (event.clientY || event.changedTouches[0].screenY) - col.dataset.startY,\n      col.dataset.colHeight\n    );\n\n    col.style.transform = `matrix(1, 0, 0, 1, 0, ${col.dataset.offsetY})`;\n\n    timeout = setTimeout(() => {\n      col.dataset.velocity = oldY - col.dataset.offsetY;\n    }, 16);\n  }\n\n  function newY(start, offset, height) {\n    const offsetAbs = Math.abs(offset);\n\n    if (offsetAbs < height / 4) {\n      // First quarter\n      offset -= height / 2;\n      start -= -height / 2;\n    } else if (offsetAbs > height - height / 4) {\n      // Third quarter\n      offset -= -height / 2;\n      start -= height / 2;\n    }\n\n    return [offset, start];\n  }\n</script>\n\n<style>\n  #edit {\n    display: flex;\n    flex-flow: row nowrap;\n    justify-content: center;\n    align-items: flex-start;\n    padding: 0 10px;\n    height: 100%;\n    max-height: 255px;\n    overflow: hidden;\n    border-top: 1px solid;\n    border-bottom: 1px solid;\n  }\n\n  p {\n    user-select: none;\n    font-size: 71px;\n  }\n\n  .col {\n    display: flex;\n    flex-flow: column nowrap;\n    justify-content: flex-start;\n    align-items: center;\n    cursor: pointer;\n    text-align: center;\n    margin: 0 5px;\n  }\n\n  .colon {\n    align-self: center;\n    margin: 0 -10px;\n    transform: translateY(-5px);\n  }\n\n  .actions {\n    display: flex;\n    flex-flow: column nowrap;\n    justify-content: flex-start;\n    align-items: center;\n    margin-top: 20px;\n  }\n\n  .save {\n    font-size: 21px;\n    padding: 10px 70px;\n  }\n\n  .cancel {\n    font-size: 16px;\n    background: #fff9;\n    padding: 5px 20px;\n    margin-top: 20px;\n  }\n</style>\n\n<svelte:window on:mousemove={mousemove} on:touchmove={mousemove} />\n<div id=\"edit\">\n  <div\n    class=\"col\"\n    use:setStart\n    on:dragstart={dragStart}\n    on:dragend={dragEnd}\n    on:touchstart={dragStart}\n    on:touchend={dragEnd}\n    draggable=\"true\"\n    data-index=\"0\">\n    {#each Array(24) as _, i}\n      <p style=\"margin: {gap / 2}px 0\">\n        {((i % 12) + 1).toString().padStart(2, 0)}\n      </p>\n    {/each}\n  </div>\n  <div class=\"colon\">\n    <p>:</p>\n  </div>\n  <div\n    class=\"col\"\n    use:setStart\n    on:dragstart={dragStart}\n    on:dragend={dragEnd}\n    on:touchstart={dragStart}\n    on:touchend={dragEnd}\n    draggable=\"true\"\n    data-index=\"1\">\n    {#each Array(24) as _, i}\n      <p style=\"margin: {gap / 2}px 0\">\n        {((i % 12) * 5).toString().padStart(2, 0)}\n      </p>\n    {/each}\n  </div>\n  <div\n    class=\"col\"\n    use:setStart\n    on:dragstart={dragStart}\n    on:dragend={dragEnd}\n    on:touchend={dragEnd}\n    on:touchstart={dragStart}\n    on:touchend={dragEnd}\n    draggable=\"true\"\n    data-index=\"2\">\n    {#each Array(12) as _, i}\n      <p style=\"margin: {gap / 2}px 0\">{i % 2 != 0 ? 'A' : 'P'}M</p>\n    {/each}\n  </div>\n</div>\n<div class=\"actions\">\n  <button class=\"save\" on:click={() => dispatch('save', newTime)}>save</button>\n  <button class=\"cancel\" on:click={() => dispatch('cancel')}>cancel</button>\n</div>\n"
  ],
  "names": [],
  "mappings": "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"
}